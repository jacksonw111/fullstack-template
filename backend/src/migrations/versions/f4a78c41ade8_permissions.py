"""permissions

Revision ID: f4a78c41ade8
Revises: 8ce4f7af3a98
Create Date: 2024-09-04 13:44:05.333873

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "f4a78c41ade8"
down_revision: Union[str, None] = "8ce4f7af3a98"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "role_permissions",
        sa.Column(
            "created_by",
            sqlmodel.sql.sqltypes.AutoString(),
            server_default="admin",
            nullable=False,
        ),
        sa.Column(
            "updated_by",
            sqlmodel.sql.sqltypes.AutoString(),
            server_default="admin",
            nullable=False,
        ),
        sa.Column(
            "created_at",
            sa.DateTime(),
            server_default=sa.text("current_timestamp(0)"),
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            sa.DateTime(),
            server_default=sa.text("current_timestamp(0)"),
            nullable=False,
        ),
        sa.Column(
            "id", sa.Uuid(), server_default=sa.text("gen_random_uuid()"), nullable=False
        ),
        sa.Column("role_id", sa.Uuid(), nullable=False),
        sa.Column(
            "permission",
            sa.Enum(
                "DASHBOARD_VIEW",
                "DASHBOARD_ADD",
                "DASHBOARD_UPDATE",
                "DASHBOARD_DELETE",
                "USER_VIEW",
                "USER_ADD",
                "USER_DELETE",
                "ROLE_VIEW",
                "ROLE_ADD",
                "ROLE_UPDATE",
                "ROLE_DELETE",
                "PERMISSION_VIEW",
                "PERMISSION_ADD",
                "PERMISSION_DELETE",
                name="permissiontype",
            ),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_role_permissions")),
    )
    op.create_index(
        op.f("ix_role_permissions_id"), "role_permissions", ["id"], unique=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_role_permissions_id"), table_name="role_permissions")
    op.drop_table("role_permissions")
    # ### end Alembic commands ###
